<?xml version="1.0" encoding="UTF-8"?>
<pmd-cpd>
   <duplication lines="64" tokens="346">
      <file line="19"
            path="/Users/SergioFrrg/NetBeansProject/mavenproject3/src/main/java/com/mycompany/mavenproject3/PracticaOblPL.java"/>
      <file line="12"
            path="/Users/SergioFrrg/NetBeansProject/mavenproject3/src/main/java/com/mycompany/mavenproject3/PruebaGramatica.java"/>
      <codefragment><![CDATA[    public static G crearGramatica(){
        VN paseo = new VN("PASEO");
        VN paso = new VN("PASO");
        VN exp = new VN("EXP");
        VT casa = new VT("casa");
        VT giro = new VT("giro");
        VT avanza = new VT("avanza");
        VT pinta = new VT("pinta");
        VT id = new VT("id");
        VT n = new VT("n");
        VT igual = new VT("=");
        
        P prod1 = new P(paseo);
        prod1.addConsecuente(paso);
        prod1.addConsecuente(paseo);
        
        P prod2 = new P(paso);
        prod2.addConsecuente(casa);
        
        P prod3 = new P(paso);
        prod3.addConsecuente(giro);
        prod3.addConsecuente(exp);
        
        P prod4 = new P(paso);
        prod4.addConsecuente(avanza);
        prod4.addConsecuente(exp);
        
        P prod5 = new P(paso);
        prod5.addConsecuente(pinta);
        prod5.addConsecuente(exp);
        
        P prod6 = new P(paso);
        prod6.addConsecuente(id);
        prod6.addConsecuente(igual);
        prod6.addConsecuente(exp);
        
        P prod7 = new P(exp);
        prod7.addConsecuente(id);
        
        P prod8 = new P(exp);
        prod8.addConsecuente(n);
        
        G gramatica = new G(paseo);
        
        gramatica.add(paseo);
        gramatica.add(paso);
        gramatica.add(exp);
        
        gramatica.add(casa);
        gramatica.add(giro);
        gramatica.add(avanza);
        gramatica.add(pinta);
        gramatica.add(id);
        gramatica.add(n);
        gramatica.add(igual);
        
        gramatica.add(prod1);
        gramatica.add(prod2);
        gramatica.add(prod3);
        gramatica.add(prod4);
        gramatica.add(prod5);
        gramatica.add(prod6);
        gramatica.add(prod7);
        gramatica.add(prod8);]]></codefragment>
   </duplication>
   <duplication lines="43" tokens="122">
      <file line="113"
            path="/Users/SergioFrrg/NetBeansProject/mavenproject3/src/main/java/com/mycompany/mavenproject3/AnalizadorRecursivoPaseo.java"/>
      <file line="146"
            path="/Users/SergioFrrg/NetBeansProject/mavenproject3/src/main/java/com/mycompany/mavenproject3/Interprete.java"/>
      <codefragment><![CDATA[    }
    
    public boolean esN(){
        return(tokenActual.compararLexema("TK_CTE_NUM"));
    }
    
    public boolean esID(){          //Arreglar todos dependiendo del lexico
        
        if(tokenActual.compararLexema("TK_ID"))
            return true;
        else
            return false;
    }
    public boolean esCasa(){          //Arreglar todos dependiendo del lexico
        
        if(tokenActual.compararLexema("TK_CASA"))
            return true;
        else
            return false;
    }
    public boolean esGiro(){
        
        if(tokenActual.compararLexema("TK_GIRO"))
            return true;
        else
            return false;
    }
    
    public boolean esAvanza(){
        
        if(tokenActual.compararLexema("TK_AVANZA"))
            return true;
        else
            return false;
    }
    
    public boolean esPinta(){
        
        if(tokenActual.compararLexema("TK_PINTA"))
            return true;
        else
            return false;
    }]]></codefragment>
   </duplication>
</pmd-cpd>